// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card that it matches an existing snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    deleteCardCallback={[Function]}
    emoji="emoji"
    id={0}
    text="text"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul>
        <li>
                 
                text
                 
        </li>
        <li>
                 
                emoji
                 
        </li>
        <li>
                <button
                        onClick={[Function]}
                >
                        Uninspired...
                </button>
        </li>
</ul>,
      "className": "card",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li>
             
            text
             
</li>,
          <li>
             
            emoji
             
</li>,
          <li>
            <button
                        onClick={[Function]}
            >
                        Uninspired...
            </button>
</li>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " ",
              "text",
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            "text",
            " ",
          ],
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " ",
              "emoji",
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            "emoji",
            " ",
          ],
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              onClick={[Function]}
>
              Uninspired...
</button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Uninspired...",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Uninspired...",
            "type": "button",
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul>
          <li>
                     
                    text
                     
          </li>
          <li>
                     
                    emoji
                     
          </li>
          <li>
                    <button
                              onClick={[Function]}
                    >
                              Uninspired...
                    </button>
          </li>
</ul>,
        "className": "card",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
               
              text
               
</li>,
            <li>
               
              emoji
               
</li>,
            <li>
              <button
                            onClick={[Function]}
              >
                            Uninspired...
              </button>
</li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "text",
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              "text",
              " ",
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "emoji",
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              "emoji",
              " ",
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                onClick={[Function]}
>
                Uninspired...
</button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Uninspired...",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Uninspired...",
              "type": "button",
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
